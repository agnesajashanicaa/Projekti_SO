#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/ipc.h>
#include <sys/shm.h>
#include <sys/sem.h>
#include <sys/msg.h>
#include <string.h>

#define MAX_CLIENTS 5
#define SHARED_MEM_KEY 1234
#define SEMAPHORE_KEY 5678
#define MESSAGE_QUEUE_KEY 9876

typedef struct {
    int client_ids[MAX_CLIENTS];
    int num_clients;
} SharedData;

typedef struct {
    long mtype;
    char mtext[256];
} Message;

int main() {
    int shmid, semid, msqid;
    SharedData *shared_data;
    struct sembuf sem_operation;
    Message message;

    // Krijimi i memory shared
    shmid = shmget(SHARED_MEM_KEY, sizeof(SharedData), IPC_CREAT | 0666);
    if (shmid == -1) {
        perror("shmget");
        exit(1);
    }

    // Lidhja e shared memory
    shared_data = (SharedData*) shmat(shmid, NULL, 0);
    if (shared_data == (void*) -1) {
        perror("shmat");
        exit(1);
    }

    // Krijimi i semaforit
    semid = semget(SEMAPHORE_KEY, 1, IPC_CREAT | 0666);
    if (semid == -1) {
        perror("semget");
        exit(1);
    }

    // Inicializimi i vlerës së semaforit
    sem_operation.sem_num = 0;
    sem_operation.sem_op = 1;
    sem_operation.sem_flg = 0;
    if (semop(semid, &sem_operation, 1) == -1) {
        perror("semop");
        exit(1);
    }
    
     // Krijimi i message queue
    msqid = msgget(MESSAGE_QUEUE_KEY, IPC_CREAT | 0666);
    if (msqid == -1) {
        perror("msgget");
        exit(1);
    }

    shared_data->num_clients = 0;

    while (1) {
        // Prit mesazhet nga message queue
        if (msgrcv(msqid, &message, sizeof(message), 1, 0) == -1) {
            perror("msgrcv");
            exit(1);
        }

        // Marrja e semaforit për të qasur në shared memory
        sem_operation.sem_num = 0;
        sem_operation.sem_op = -1;
        sem_operation.sem_flg = 0;
        if (semop(semid, &sem_operation, 1) == -1) {
            perror("semop");
            exit(1);
        }

        // Procesimi i mesazhit
        if (strcmp(message.mtext, "CONNECT") == 0) {
            if (shared_data->num_clients < MAX_CLIENTS) {
                shared_data->client_ids[shared_data->num_clients] = message.mtype;
                shared_data->num_clients++;
                printf("Klienti %ld u lidh\n", message.mtype);
                strcpy(message.mtext, "LIDHUR");
            } else {
                printf("Refuzim i klientit %ld: Numri i klientëve të lejuar është i tejkaluar\n", message.mtype);
                strcpy(message.mtext, "REFUZUAR");
            }
        } else {
            printf("Klienti %ld: %s\n", message.mtype, message.mtext);
            strcpy(message.mtext, "PERGJIGJE");
        }

        // Dërgimi i pergjigjes në message queue
        message.mtype = message.mtype;
        if (msgsnd(msqid, &message, sizeof(message), 0) == -1) {
            perror("msgsnd");
            exit(1);
        }

        // Lirimi i semaforit pasi është përfunduar qasja në shared memory
        sem_operation.sem_num = 0;
        sem_operation.sem_op = 1;
        sem_operation.sem_flg = 0;
        if (semop(semid, &sem_operation, 1) == -1) {
            perror("semop");
            exit(1);
        }
    }

    return 0;
}
